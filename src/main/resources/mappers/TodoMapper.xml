<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="org.example.springjsp.domain.todolist.repository.TodoMapper">
    <select id="findAll" resultType="org.example.springjsp.domain.todolist.Todo" parameterType="java.time.LocalDate">
        SELECT id, content, completed, toDate
        FROM todo
        where toDate = #{toDate}
        order by completed asc, id asc;
    </select>

    <select id="findAllByCategory" resultType="org.example.springjsp.domain.todolist.Todo"
            parameterType="org.example.springjsp.domain.todolist.category.Category">
        SELECT id, content, completed, toDate, category
        FROM todo
        where category = #{category}
          and completed = false
        order by completed asc, id asc;
    </select>

    <select id="findAllByComplete" resultType="org.example.springjsp.domain.todolist.Todo">
        SELECT id, content, completed, toDate, category
        FROM todo
        where completed = true
        order by completed asc, id asc;
    </select>

    <insert id="save" parameterType="org.example.springjsp.domain.todolist.Todo" useGeneratedKeys="true"
            keyColumn="id" keyProperty="id">
        insert into todo(content, completed, toDate, category)
        values (#{content},
                #{completed},
                #{toDate},
                #{category})
    </insert>

    <select id="findById" resultType="org.example.springjsp.domain.todolist.Todo" parameterType="Long">
        select id, content, completed, toDate, category
        from todo
        where id = #{id}
    </select>

    <update id="update" parameterType="Map">
        update todo
        set content   = #{todo.content},
            completed = #{todo.completed}
        where id = #{id}
    </update>

    <delete id="delete" parameterType="Long">
        delete
        from todo
        where id = #{id}
    </delete>
</mapper>
